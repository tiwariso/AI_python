# -*- coding: utf-8 -*-
"""practical7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ecvWc1nIAZpNABwD0pgGLj3HrJXZNkOh
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import (
    accuracy_score,
    confusion_matrix,
    ConfusionMatrixDisplay,
    f1_score,
    classification_report,
)

df = pd.read_csv("loan_data.csv")
df.head()

num_rows,num_columns = df.shape
print(f"There are {num_rows} rows and {num_columns} columns in the dataset.")

sns.countplot(data=df,x='purpose', hue='not.fully.paid')
plt.xticks(rotation=45, ha='right');

pre_df =pd.get_dummies(df,columns=['purpose'],drop_first=True)
pre_df.head()

X = pre_df.drop('not.fully.paid',axis=1)
y = pre_df['not.fully.paid']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=125)

model = GaussianNB()
model.fit(X_train,y_train);

y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test,y_pred)
f1 = f1_score(y_test,y_pred,average="weighted")

print(f"Accuracy: {accuracy}")
print(f"F1 Score: {f1}")

labels = ['Fully Paid', 'Not Fully Paid']
cm = confusion_matrix(y_test,y_pred)
disp = ConfusionMatrixDisplay(confusion_matrix=cm,display_labels=labels)
disp.plot()
plt.show()

